<?xml version="1.0" encoding="UTF-8"?>
<model version="5.2.3" links="1">
 <documentation>About this example:
-------------------
Simple &quot;Blinky&quot; console application for workstations (Windows, Linux, MacOS)
(see &quot;QM Tutorial&quot; at: https://www.state-machine.com/qm/gs_tut.html)

This example demonstrates:
- Active object (Blinky) with state machine
- Board Support Package abstraction for portability
- BSP implementation for desktop OS (Windows, Linux, MacOS)
- Platform-independent main() function
- Makefile to build the generated code on desktop OS (Windows, Linux, MacOS)
- Customized tools for building the generated code directly from QM

Building the example:
---------------------
To build this example, you will need the QP/C framework installed on your computer and the GNU-GCC compiler. Both of them will be available if you install the QP-bundle from:

https://www.state-machine.com/#Downloads

Running the example:
--------------------
This example is a simple console application, which you can run from a terminal.

For more QM examples for QP/C see:
https://www.state-machine.com/qpc/exa.html</documentation>
 <!--${qpc}-->
 <framework name="qpc"/>
 <!--${HSMs}-->
 <package name="HSMs" stereotype="0x02">
  <!--${HSMs::Clock_Alarm}-->
  <class name="Clock_Alarm" superclass="qpc::QHsm">
   <!--${HSMs::Clock_Alarm::timeEvt}-->
   <attribute name="timeEvt" type="QTimeEvt" visibility="0x02" properties="0x00"/>
   <!--${HSMs::Clock_Alarm::SM}-->
   <statechart properties="0x01">
    <!--${HSMs::Clock_Alarm::SM::initial}-->
    <initial target="../1/1">
     <initial_glyph conn="1,4,5,3,4,7,9">
      <action box="0,-2,10,2"/>
     </initial_glyph>
    </initial>
    <!--${HSMs::Clock_Alarm::SM::Clock}-->
    <state name="Clock">
     <!--${HSMs::Clock_Alarm::SM::Clock::history}-->
     <history type="deep" target="../1">
      <history_glyph conn="11,28,3,2,5,-7"/>
     </history>
     <!--${HSMs::Clock_Alarm::SM::Clock::Ticking}-->
     <state name="Ticking">
      <!--${HSMs::Clock_Alarm::SM::Clock::Ticking::SET}-->
      <tran trig="SET" target="../../2/2">
       <tran_glyph conn="32,10,1,3,10,7,2">
        <action box="0,-2,10,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::Clock_Alarm::SM::Clock::Ticking::OK}-->
      <tran trig="OK" target="../../2/3">
       <tran_glyph conn="32,17,1,3,5,6,6,6,2">
        <action box="-1,1,10,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="14,7,18,14"/>
     </state>
     <!--${HSMs::Clock_Alarm::SM::Clock::Setting}-->
     <state name="Setting">
      <!--${HSMs::Clock_Alarm::SM::Clock::Setting::ABORT}-->
      <tran trig="ABORT" target="../../1">
       <tran_glyph conn="41,30,3,2,-13,-9">
        <action box="-5,-2,10,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::Clock_Alarm::SM::Clock::Setting::OK}-->
      <tran trig="OK" target="../../1">
       <tran_glyph conn="41,34,3,2,-20,-13">
        <action box="0,-2,10,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::Clock_Alarm::SM::Clock::Setting::Clock_Setting}-->
      <state name="Clock_Setting">
       <state_glyph node="44,13,13,6"/>
      </state>
      <!--${HSMs::Clock_Alarm::SM::Clock::Setting::Alarm_Setting}-->
      <state name="Alarm_Setting">
       <state_glyph node="45,26,13,6"/>
      </state>
      <state_glyph node="41,6,20,30"/>
     </state>
     <state_glyph node="11,2,61,36"/>
    </state>
    <!--${HSMs::Clock_Alarm::SM::Alarm_Notify}-->
    <state name="Alarm_Notify">
     <!--${HSMs::Clock_Alarm::SM::Alarm_Notify::OK}-->
     <tran trig="OK" target="../../1" cpref="../../1/0">
      <tran_glyph conn="19,50,3,3,-11,-22,2">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="19,46,32,9"/>
    </state>
    <state_diagram size="84,65"/>
   </statechart>
  </class>
 </package>
 <!--${../src}-->
 <directory name="../src">
  <!--${../src::ClockAlarm.c}-->
  <file name="ClockAlarm.c">
   <text>#include &quot;qpc.h&quot;
#include &quot;lcd.h&quot;
#include &quot;ClockAlarm.h&quot;
$declare${HSMs::Clock_Alarm}</text>
  </file>
  <!--${../src::ClockAlarm.h}-->
  <file name="ClockAlarm.h">
   <text>#ifndef CLOCK_ALARM_H
#define CLOCK_ALARM_H

enum ClockAlarm_Signals
{
    SET_SIG = Q_USER_SIG,
    OK_SIG,
    ABORT_SIG,
    ALARM_SIG,
    TICK_SIG,
    MAX_SIG
}

#endif</text>
  </file>
 </directory>
</model>
